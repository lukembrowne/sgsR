% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dataio.R
\name{createSgsObj}
\alias{createSgsObj}
\title{Create basic data structure for sgs analysis}
\usage{
createSgsObj(sample_ids, genotype_data, x_coords, y_coords,
  missing_val = -999, groups = NULL, ploidy = 2, loci_names = NULL)
}
\arguments{
\item{sample_ids}{A vector of numbers or names giving individual IDs of samples.}

\item{genotype_data}{A matrix or dataframe with genetic data. See details for more information.}

\item{x_coords}{A numeric vector with X coordinates of samples.}

\item{y_coords}{A numeric vector with Y coordinates of samples.}

\item{missing_val}{Numeric or character value indicating value used for missing data. Default is -999.}

\item{groups}{An optional vector of  of grouping classfication. \emph{Note:} Analyses on groups have not been implemented yet.}

\item{ploidy}{Ploidy level. \emph{Note:} Analyses have only been tested with ploidy = 2.}

\item{loci_names}{Optional vector of loci names.}
}
\value{
Returns an object of the class sgsObj.
}
\description{
This function creates the basic data structure that will hold all the information necessary for sgs analyses - an object of the class sgsObj. It includes genotype data, spatial data, information about ploidy, groups, names of loci, etc.
sgsObjs can be created from scratch through the function below, or by reading in text input files created by other programs using the \code{\link{readSpagedi}} and \code{\link{readGenepop}} functions
}
\section{Details}{


\emph{\strong{Genotype data structure}}

Genotype data should be formatted as a dataframe or matrix with individual samples as rows and loci as columns. Each locus should have two columns (in the case of diploid organisms), and these pairs of columns should be adjacent to each other.

\tabular{rrrrrr}{
 Loc1_A \tab Loc1_B \tab Loc2_A \tab Loc2_B \tab Loc3_A \tab Loc3_B \cr
1 \tab 0 \tab 7 \tab 0 \tab 1 \tab 0 \cr
2 \tab 3 \tab 4 \tab 5 \tab 4 \tab 1 \cr
3 \tab 2 \tab 2 \tab 3 \tab 2 \tab 4 \cr
2 \tab 1 \tab 1 \tab 2 \tab 2 \tab 2 \cr
}
}
\examples{
## Simulate genetic data
Nind = 100 # Number of individuals
Nloci = 5 # Number of loci
Nallele = 10 # Number of alleles per loci

## Set up data frame and generate random spatial locations
dat <- data.frame(id = 0:(Nind - 1))
dat$x = runif(Nind, 0, 100)
dat$y = runif(Nind, 0, 100)

## Simulate Random genetic data and assign loci names
for (loci in 1:Nloci) {
 loci_name_a = paste("Loc", loci, "_A", sep = "")
 loci_name_b = paste("Loc", loci, "_B", sep = "")
 dat[loci_name_a] <- sample.int(Nallele, Nind, replace = TRUE)
 dat[loci_name_b] <- sample.int(Nallele, Nind, replace = TRUE)
}

## Convert to sgsObj
sgsObj = createSgsObj(sample_ids = dat$id,
                     genotype_data = dat[, 4:(Nloci*2 + 3)],
                     ploidy = 2,
                     x_coords = dat$x,
                     y_coords = dat$y)
summary(sgsObj)
}
\seealso{
\code{\link{summary.sgsObj}}
}

